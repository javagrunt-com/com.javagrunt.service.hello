name: Native-AMD64

on:
  push:
    tags:
      - "v*"

env:
  IMAGE_NAME: dashaun/com.javagrunt.service.hello

jobs:
  build-mac:
    runs-on: macos-14
    steps:
      - name: brew setup
        run: |
          set -x
          brew install --cask docker
          open -g -j -a /Applications/Docker.app
          docker version
          docker run --rm hello-world
          brew tap sdkman/tap
          brew install sdkman-cli
          export SDKMAN_DIR=$(brew --prefix sdkman-cli)/libexec
          [[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]]
          source "${SDKMAN_DIR}/bin/sdkman-init.sh"
          sdk version
          sdk install java 23.1.2.r21-nik
          sdk use java 23.1.2.r21-nik
      #Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: dashaun
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout Main
        uses: actions/checkout@v3
        with:
          submodules: true
      #Build Image
      - name: Build Image
        run: ./mvnw -Pnative spring-boot:build-image
      #Deploy the image to the Docker registry
      - name: Push Images to Docker Registry
        run: docker push -a $IMAGE_NAME
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      #Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: dashaun
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/setup-java@v2
        with:
          distribution: 'liberica' # See 'Supported distributions' for available options
          java-version: '21'
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          submodules: true
      #Build Image
      - name: Build Image
        run: ./mvnw -Pnative spring-boot:build-image
      #Deploy the image to the Docker registry
      - name: Push Images to Docker Registry
        run: docker push -a $IMAGE_NAME
  manifest:
    needs: [build-mac, build-ubuntu]
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: dashaun
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: pull-arm64
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          retry_wait_seconds: 60
          max_attempts: 6
          command: docker pull $IMAGE_NAME:$GITHUB_REF_NAME-aarch_64
      - name: create-manifest
        run: |
          docker manifest create $IMAGE_NAME:$GITHUB_REF_NAME --amend $IMAGE_NAME:$GITHUB_REF_NAME-x86_64 --amend $IMAGE_NAME:$GITHUB_REF_NAME-aarch_64
          docker manifest push $IMAGE_NAME:$GITHUB_REF_NAME
          docker manifest create $IMAGE_NAME:latest --amend $IMAGE_NAME:$GITHUB_REF_NAME-x86_64 --amend $IMAGE_NAME:$GITHUB_REF_NAME-aarch_64
          docker manifest push $IMAGE_NAME:latest
